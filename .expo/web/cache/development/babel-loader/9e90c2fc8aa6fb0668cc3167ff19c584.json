{"ast":null,"code":"import { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { UseGetAllKitten } from \"./components/hooks/getAllKittenQuery\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar queryClient = new QueryClient();\nexport default function App() {\n  var _UseGetAllKitten = UseGetAllKitten(),\n    data = _UseGetAllKitten.data,\n    isLoading = _UseGetAllKitten.isLoading;\n  return _jsx(QueryClientProvider, {\n    client: queryClient,\n    children: _jsxs(View, {\n      children: [isLoading ? _jsx(Text, {\n        children: \" Loading...\"\n      }) : data ? data.data.map(function (kitten, key) {\n        return _jsx(View, {\n          children: _jsx(Text, {\n            children: kitten.data\n          })\n        });\n      }) : _jsx(Text, {\n        children: \"Whoops No Data Available\"\n      }), _jsx(Text, {})]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  header: {\n    backgroundColor: 'pink',\n    padding: 20\n  },\n  boldText: {\n    fontWeight: 'bold'\n  },\n  body: {\n    backgroundColor: 'yellow',\n    padding: 20\n  }\n});","map":{"version":3,"names":["QueryClient","QueryClientProvider","UseGetAllKitten","queryClient","App","data","isLoading","map","kitten","key","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","header","padding","boldText","fontWeight","body"],"sources":["C:/Users/acer/Downloads/react-native-app/myproject/App.js"],"sourcesContent":["import { QueryClient, QueryClientProvider } from '@tanstack/react-query';\n// import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { UseGetAllKitten } from './components/hooks/getAllKittenQuery';\n\nconst queryClient = new QueryClient();\n\nexport default function App() {\n  \n  const {data, isLoading} = UseGetAllKitten();\n\n  return (\n    <QueryClientProvider client={queryClient}>\n    <View>\n      {isLoading ? (\n        <Text> Loading...</Text>\n      ) : data ? (\n        data.data.map((kitten, key) => {\n          return ( \n            <View>\n              <Text>{kitten.data}</Text>\n            </View>\n          );\n        })\n      ): (\n        <Text>Whoops No Data Available</Text>\n      )}\n      <Text></Text>\n    </View>\n\n    </QueryClientProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  header: {\n    backgroundColor: 'pink',\n    padding: 20,\n  },\n  boldText: {\n    fontWeight: 'bold',\n  },\n  body: {\n    backgroundColor: 'yellow',\n    padding: 20,  \n  }\n});\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,mBAAmB,QAAQ,uBAAuB;AAAC;AAAA;AAAA;AAGzE,SAASC,eAAe;AAA+C;AAAA;AAEvE,IAAMC,WAAW,GAAG,IAAIH,WAAW,EAAE;AAErC,eAAe,SAASI,GAAG,GAAG;EAE5B,uBAA0BF,eAAe,EAAE;IAApCG,IAAI,oBAAJA,IAAI;IAAEC,SAAS,oBAATA,SAAS;EAEtB,OACE,KAAC,mBAAmB;IAAC,MAAM,EAAEH,WAAY;IAAA,UACzC,MAAC,IAAI;MAAA,WACFG,SAAS,GACR,KAAC,IAAI;QAAA;MAAA,EAAmB,GACtBD,IAAI,GACNA,IAAI,CAACA,IAAI,CAACE,GAAG,CAAC,UAACC,MAAM,EAAEC,GAAG,EAAK;QAC7B,OACE,KAAC,IAAI;UAAA,UACH,KAAC,IAAI;YAAA,UAAED,MAAM,CAACH;UAAI;QAAQ,EACrB;MAEX,CAAC,CAAC,GAEF,KAAC,IAAI;QAAA;MAAA,EACN,EACD,KAAC,IAAI,KAAQ;IAAA;EACR,EAEe;AAE1B;AAEA,IAAMK,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDC,MAAM,EAAE;IACNH,eAAe,EAAE,MAAM;IACvBI,OAAO,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAU,EAAE;EACd,CAAC;EACDC,IAAI,EAAE;IACJP,eAAe,EAAE,QAAQ;IACzBI,OAAO,EAAE;EACX;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}