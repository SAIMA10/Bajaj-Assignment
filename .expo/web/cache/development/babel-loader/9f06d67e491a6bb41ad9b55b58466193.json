{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport axios from 'axios';\nvar allAnimeUrl = \"https://api.jikan.moe/v4/anime\";\nvar getAllAnime = function () {\n  var _ref = _asyncToGenerator(function* () {\n    var response = yield axios.get(allAnimeUrl);\n    return response.data;\n  });\n  return function getAllAnime() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var UseGetAllAnime = function UseGetAllAnime() {\n  var _useQuery = useQuery(['allAnime'], getAllAnime),\n    isLoading = _useQuery.isLoading,\n    data = _useQuery.data;\n  return {\n    data: data,\n    isLoading: isLoading\n  };\n};","map":{"version":3,"names":["useQuery","axios","allAnimeUrl","getAllAnime","response","get","data","UseGetAllAnime","isLoading"],"sources":["C:/Users/acer/Downloads/react-native-app/myproject/components/hooks/getAllAnimeQuery.js"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\r\nimport axios from 'axios';\r\n\r\nconst allAnimeUrl = \"https://api.jikan.moe/v4/anime\";\r\n\r\nconst getAllAnime = async() => {\r\n    const response = await axios.get(allAnimeUrl);\r\n    return response.data;\r\n};\r\n\r\nexport const UseGetAllAnime = () => {\r\n    const {isLoading, data} = useQuery(['allAnime'], getAllAnime);\r\n    return {data, isLoading};\r\n};"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,OAAOC,KAAK,MAAM,OAAO;AAEzB,IAAMC,WAAW,GAAG,gCAAgC;AAEpD,IAAMC,WAAW;EAAA,6BAAG,aAAW;IAC3B,IAAMC,QAAQ,SAASH,KAAK,CAACI,GAAG,CAACH,WAAW,CAAC;IAC7C,OAAOE,QAAQ,CAACE,IAAI;EACxB,CAAC;EAAA,gBAHKH,WAAW;IAAA;EAAA;AAAA,GAGhB;AAED,OAAO,IAAMI,cAAc,GAAG,SAAjBA,cAAc,GAAS;EAChC,gBAA0BP,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAEG,WAAW,CAAC;IAAtDK,SAAS,aAATA,SAAS;IAAEF,IAAI,aAAJA,IAAI;EACtB,OAAO;IAACA,IAAI,EAAJA,IAAI;IAAEE,SAAS,EAATA;EAAS,CAAC;AAC5B,CAAC"},"metadata":{},"sourceType":"module"}